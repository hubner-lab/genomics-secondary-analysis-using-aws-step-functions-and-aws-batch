---
AWSTemplateFormatVersion: 2010-09-09
Description: >
  (SO0076) - Genomics-secondary-analysis-using-aws-step-functions-and-aws-batch: Landing Zone.
  Provides common AWS resources for maintaining and operating the CI/CD pipeline

Parameters:
  Project:
    Type: String
    Default: GenomicsWorkflow
  ProjectLowerCase:
    Type: String
    Default: genomicsworkflow

  InputBucket: 
    Type: String

  WorkflowBucket: 
    Type: String
    
Resources:
  # bucket to store common artifacts and resources for the solution (e.g. nested templates)
  ZoneBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      LoggingConfiguration:
        DestinationBucketName: !Ref LogsBucket
        LogFilePrefix: zone_logs/
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W51
            reason: Bucket policy is not needed.
  
  LogsBucket:
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: This is the pipeline and solution log bucket and does not require access logging to be configured.
          - id: W51
            reason: Bucket policy is not needed.
  
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - cloudformation.amazonaws.com
      Policies:
        - PolicyName: CloudFormationRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:GetRolePolicy
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:UpdateRoleDescription
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:UpdateAssumeRolePolicy
                  - iam:PassRole
                  - iam:GetRole
                  - iam:GetInstanceProfile
                  - iam:CreateInstanceProfile
                  - iam:DeleteInstanceProfile
                  - iam:AddRoleToInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/${Project}*
                  - !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/${Project}*
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:GetObject
                  - s3:PutObject 
                  - s3:PutEncryptionConfiguration
                  - s3:PutBucketPublicAccessBlock
                  - s3:PutBucketLogging
                  - s3:PutBucketAcl
                Resource:
                  - !Sub "arn:aws:s3:::${ProjectLowerCase}*"
                  - !Sub "arn:aws:s3:::${ProjectLowerCase}*/*"
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                Resource:
                  - !Sub ${ZoneBucket.Arn}
                  - !Sub ${ZoneBucket.Arn}/*
              - Effect: Allow
                Action:
                  - codecommit:GetRepository
                  - codecommit:CreateRepository
                  - codecommit:DeleteRepository
                Resource:
                  - !Sub arn:aws:codecommit:*:*:${Project}*
              - Effect: Allow
                Action:
                  - codecommit:ListRepositories
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - codebuild:BatchGetProjects
                  - codebuild:CreateProject
                  - codebuild:DeleteProject
                  - codebuild:UpdateProject
                Resource:
                  - !Sub arn:aws:codebuild:*:*:project/${Project}*
                  - !Sub arn:aws:codebuild:*:*:project/${ProjectLowerCase}*
              - Effect: Allow
                Action:
                  - codepipeline:GetPipeline
                  - codepipeline:CreatePipeline
                  - codepipeline:DeletePipeline
                  - codepipeline:UpdatePipeline
                  - codepipeline:GetPipelineState
                Resource:
                  - !Sub arn:aws:codepipeline:*:*:${Project}*
                  - !Sub arn:aws:codepipeline:*:*:${ProjectLowerCase}*
              - Effect: Allow
                Action:
                  - events:PutRule
                  - events:EnableRule
                  - events:DeleteRule
                  - events:DescribeRule
                  - events:PutTargets
                  - events:RemoveTargets
                Resource:
                  - "*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: AWS Batch requires * resources. cloudwatch:ListDashboards and 22 ec2 actions require * for resources. codecommit:ListRepositories requires * resources.

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${Project}*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${Project}*:*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectLowerCase}*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectLowerCase}*:*
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:GetBucketVersioning
                  - s3:DeleteObject
                Resource:
                  - !Sub ${ZoneBucket.Arn}
                  - !Sub ${ZoneBucket.Arn}/*
  
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub ${Project}-Zone CodePipeline Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CloudFormationAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                Effect: Allow
                Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${Project}Pipe/*
        - PolicyName: IamAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - iam:PassRole
                Effect: Allow
                Resource: !Sub ${CloudFormationRole.Arn}
        - PolicyName: S3Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:DeleteObject
                  - s3:PutObject
                Resource:
                  - !Sub ${ZoneBucket.Arn}
                  - !Sub ${ZoneBucket.Arn}/*
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  - !Sub "arn:aws:codebuild:*:*:project/${Project}*"
                  - !Sub "arn:aws:codebuild:*:*:project/${ProjectLowerCase}*"
        - PolicyName: CodeCommitAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:UploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${Project}*
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${ProjectLowerCase}*

  SourceEventRole:
    Type: AWS::IAM::Role
    DependsOn: CodePipeline
    Properties:
      Description: IAM role to allow Amazon CloudWatch Events to trigger AWS CodePipeline execution
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
      Policies:
        - PolicyName: CloudWatchEventPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - codepipeline:StartPipelineExecution
                Effect: Allow
                Resource:
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Project}*
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectLowerCase}*

  # CodeCommit repository for the CI/CD pipeline for the solution
  Repo:
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub ${Project}Pipe
      RepositoryDescription: !Sub ${Project}Pipe
  
  BuildPipe:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${Project}BuildPipe
      Description: !Sub ${Project}BuildPipe
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        EnvironmentVariables:
          - Name: ZONE_BUCKET
            Value: !Ref ZoneBucket
      ServiceRole: !Sub ${CodeBuildRole.Arn}
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
  
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Sub ${ZoneBucket}
        Type: S3
      Name: !Sub ${Project}Zone-CodePipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: CodeCommitRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                BranchName: master
                RepositoryName: !GetAtt Repo.Name
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceStageOutput
        - Name: Build
          Actions:
            - Name: BuildPipeAssets
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref BuildPipe
              InputArtifacts:
              - Name: SourceStageOutput
        - Name: Deploy
          Actions:
            - Name: CreatePipeStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: !Sub ${Project}Pipe
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub ${CloudFormationRole.Arn}
                TemplatePath: SourceStageOutput::main.cfn.yml
                ParameterOverrides: !Sub '{ "Project": "${Project}", "ProjectLowerCase": "${ProjectLowerCase}", "ZoneStackName": "${AWS::StackName}"}'
              InputArtifacts:
                - Name: SourceStageOutput
              OutputArtifacts: []

  SourceEvent:
    Type: AWS::Events::Rule
    DependsOn:
      - CodePipeline
      - SourceEventRole
    Properties:
      Description: > 
        Rule for Amazon CloudWatch Events to detect changes to the source
        repository and trigger pipeline execution
      EventPattern:
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - master
          referenceType:
            - branch
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub ${Repo.Arn}
        source:
          - aws.codecommit
      Name: !Sub ${Repo}-Pipeline-Trigger
      State: ENABLED
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipeline}
          Id: ProjectPipelineTarget
          RoleArn: !Sub ${SourceEventRole.Arn}

Outputs:
  ZoneBucket:
    Description: Name of S3 bucket for zone assets
    Value: !Ref ZoneBucket
    Export:
      Name: !Sub ${AWS::StackName}-ZoneBucket
  
  LogsBucket:
    Description: Name of the S3 bucket used for logs
    Value: !Ref LogsBucket
    Export:
      Name: !Sub ${AWS::StackName}-LogsBucket

  RepoName:
    Description: RepoName
    Value: !Sub ${Repo.Name}

  RepoCloneUrl:
    Description: RepoUrl
    Value: !GetAtt Repo.CloneUrlHttp
    Export:
      Name: !Sub ${AWS::StackName}-CodeRepo

  InputBucket:
    Value: !Ref InputBucket
    Export:
      Name: !Sub ${AWS::StackName}-InputBucket

  WorkflowBucket:
    Value: !Ref WorkflowBucket 
    Export:
      Name: !Sub ${AWS::StackName}-WorkflowBucket
...

