{
  "Comment": "Simple Genomics Workflow 2",
  "StartAt": "Initialize",
  "States": {
    "Initialize": {
      "Type": "Pass",
      "InputPath": "$",
      "Parameters": {
        "workflow": {
          "name.$": "$$.StateMachine.Name",
          "execution.$": "$$.Execution.Name"
        },
        "params.$": "$.params",
        "jobdefs": {
          "gatk": "${BatchJobDefinitionGatk}"
        }
      },
      "Next": "SplitChr"
    },
    "SplitChr": {
      "Type": "Map",
      "InputPath": "$",
      "ItemsPath": "$.params.chrom",
      "MaxConcurrency": 0,
      "ResultPath": null,
      "Parameters": {
        "workflow.$": "$.workflow",
        "params.$": "$.params",
        "jobdefs.$": "$.jobdefs",
        "chrom.$": "$$.Map.Item.Value"
      },
      "Iterator": {
        "StartAt": "Split",
        "States": {
          "Split": {
            "Type": "Task",
            "InputPath": "$.chrom",
            "ResultPath": "$.ranges",
            "Resource": "${SplitLambdaArn}",
            "Next": "MapRanges"
          },
          "MapRanges": {
            "Type": "Task",
            "InputPath": "$",
            "ResultPath": null,
            "Resource": "arn:aws:states:::states:startExecution",
            "Parameters": {
              "Input": {
                "data": {
                  "chrom.$": "$.chrom.name"
                },
                "statemachine": "States.Array(${MapStateMachineArn},${HC})",
                "items.$": "States.Array($.samples, $.ranges)"
              },
              "StateMachineArn": "${MapStateMachineArn}"
            },
            "End": true
          }
        }
      },
      "End": true
    }
  }
}
